{"version":3,"file":"cli.js","sources":["webpack:///webpack/bootstrap","webpack:///./libs/jsono.js","webpack:///./libs/stock/fetch/fetch.js","webpack:///./libs/walk.js","webpack:///./libs/merge.js","webpack:///./cli.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n","/*!\n * Created by j on 18/11/9.\n * 把json文件包装成对象进行增删改查\n */\n\nimport fs from 'fs'\nimport path from 'path'\n\nclass Jo {\n\n    /**\n     *\n     * @param jsonPath {String} json file path\n     * @param initData {Object|Array}\n     */\n    constructor (jsonPath, initData = {}) {\n\n        jsonPath = path.resolve(__dirname, `${ jsonPath }`)\n        this.jsonPath = jsonPath\n\n        if (!fs.existsSync(jsonPath)) {\n            //fs.createWriteStream(jsonPath)\n            this.json = initData\n        } else {\n            try {\n                let str = fs.readFileSync(this.jsonPath, 'utf8')\n                this.json = JSON.parse(str)\n            } catch (e) {\n                throw new Error(e)\n            }\n        }\n    }\n\n    merge (obj) {\n        Object.assign(this.json, obj)\n    }\n\n    save () {\n        fs.writeFileSync(this.jsonPath, JSON.stringify(this.json, null, '\\t'))\n    }\n\n    get (key) {\n        if (!key) return this.json\n\n        let keys = key.split('.')\n\n        return (function fx (namespace, keys) {\n            let k = keys.shift()\n            let o = namespace[k]\n            if (o && keys.length) return fx(namespace[k], keys)\n            return o\n        })(this.json, keys)\n    }\n\n    match (key) {\n        return this.get(key)\n    }\n\n}\n\n\nexport { Jo }\n\n\nexport default function (jsonPath, initData) {\n    return new Jo(jsonPath, initData)\n}","/**\n * Created by j on 18/8/16.\n * 从网页上获取股票信息\n */\n\nimport client from 'cheerio-httpcli'\n\nimport ths_c from './ths_c.js'\nimport ths_new from './ths_new.js'\nimport ths_p from './ths_p.js'\nimport ycj from './ycj.js'\nimport xgb from './xgb.js'\n\nconst sourceMap = {\n    ths_c,\n    ths_new,\n    ths_p,\n    ycj,\n    xgb\n};\n\n\nclient.set('gzip', true);\nclient.set('timeout', 30000);\nclient.set('headers', {\n    'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.98 Safari/537.34'\n});\n\n/**\n *\n * @param code {String}\n * @param sourceId {String}\n * @param delay {Number}\n * @returns {Promise<any>}\n */\nfunction fetch (code, sourceId, delay) {\n\n    let source = sourceMap[sourceId];\n\n    return new Promise((resolve, reject) => {\n\n        //setTimeout(function () {\n\n        client.fetch(source.url(code), function (err, $, res, body) {\n            if (err) return reject(err);\n            try {\n                let result = source.parse($);\n                resolve({result, source_id: sourceId, code});\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        //}, delay || 30);\n\n    });\n\n}\n\n\nexport default fetch;\n","/*!\n * Created by j on 18/9/14.\n */\nconst fs = require('fs');\nconst path = require('path');\n\n/**\n * 递归遍历目录\n * @param filePath\n * @param callback\n */\nfunction recurve(filePath, callback) {\n\n    fs.readdir(filePath, function (err, files) {\n        if (err) {\n            console.error(err);\n        } else {\n            //遍历读取到的文件列表\n            files.forEach(function (filename) {\n                //获取当前文件的绝对路径\n                var filedir = path.join(filePath, filename);\n                //根据文件路径获取文件信息，返回一个fs.Stats对象\n                fs.stat(filedir, function (eror, stats) {\n                    if (eror) {\n                        console.error('获取文件stats失败');\n                    } else {\n                        var isFile = stats.isFile();//是文件\n                        var isDir = stats.isDirectory();//是文件夹\n                        if (isFile) {\n                            callback(filedir);\n                        }\n                        if (isDir) {\n                            recurve(filedir, callback);//递归，如果是文件夹，就继续遍历该文件夹下面的文件\n                        }\n                    }\n                })\n            });\n        }\n    });\n\n}\n\nmodule.exports = function (filePath, callback) {\n\n    let stat = fs.statSync(filePath);\n\n    if (stat.isFile()) {\n\n        callback(filePath);\n\n    } else if (stat.isDirectory()) {\n\n        recurve(filePath, callback);\n\n    }\n\n};","/**\n * Created by Julien on 2017/2/27.\n */\n\nimport fs from 'fs'\n\nimport walk from '../libs/walk.js'\n\n/**\n * 根据文件名中包含的数字,字母ab, 上中下对文件进行比较,据此排序\n * @param a {String} file name\n * @param b {String} file name\n */\nfunction x (a, b) {\n    let reg = /(\\d+)|[上中下]|[a-b]/img;\n    let ar = a.match(reg);\n    let br = b.match(reg);\n}\n\n/**\n * 从文件名里获取数字序号\n * @param file_name\n * @returns {*|Array}\n */\nfunction get_d (file_name) {\n    let arr = file_name.match(/\\d+/g) || [];\n    if (!arr.length) return;\n    arr.length === 1 && arr.unshift(arr[0]);\n    arr.push(file_name);\n    return arr;\n}\n\nexport default function (path) {\n\n    console.log(path);\n\n    let dir_name = path.split('/');\n    dir_name = dir_name.pop();\n    console.log(dir_name);\n\n    fs.readdir(path, function (err, files) {\n        if (err) {\n            return console.error(err);\n        }\n        let arr = [];\n        let item;\n\n        for (let i = 0; i < files.length; i += 1) {\n            item = files[i];\n            if (/\\.txt$/i.test(item)) {\n                item = get_d(item);\n                item && arr.push(item);\n            }\n        }\n\n        //对文件进行排序\n        //截取文件名里的最大序号\n        arr.sort(function (a, b) {\n            return a[1] * 1 - b[1] * 1;\n        });\n\n        console.log(arr);\n\n        let new_txt = `${ dir_name } ( ${ arr[0][0] }-${ arr[arr.length - 1][1] } ).txt`;\n\n        // 创建新文本文件, 用于保存合并内容\n        fs.writeFileSync(new_txt, '');\n\n        arr.forEach(function (v) {\n            let str = fs.readFileSync(v[2]);\n            fs.appendFile(new_txt, str, function (err) {\n                err && console.error(err);\n            });\n        });\n\n    });\n\n}\n\n\n","/**\n * 命令行调用接口\n * Created by Julien on 2017/4/15.\n */\n\nimport program from 'commander'\n\nimport csv from './bin/csv2json.js'\nimport fetch from './bin/fetch.js'\nimport tdx from './bin/tdx.js'\nimport merge from './bin/merge.js'\nimport htm2txt from './bin/htm2txt.js'\n\nprogram.version(VERSION, '-v, --version').usage('<sub-command>');\n\n// 根据csv文件输出json文件\ncsv(program)\n\n// 从网络获取股票数据, 比如同花顺概念资料\nfetch(program)\n\n// 通达信自定义数据输出\ntdx(program)\n\n// html转为txt文件\nhtm2txt(program)\n\n// 合并目录里的序列文本文件\nmerge(program)\n\n// 解析命令行提供的参数\nprogram.parse(process.argv)\n\n// 无参数, 输出帮助\nif(!program.args.length) {\n    program.help()\n}\n"],"mappings":";AACA;;;;;ACOA;;;;ACcA;;;;ACnBA;;;AC6BA;;;ACnBA","sourceRoot":""}