{"version":3,"file":"index.js","sources":["webpack:///webpack/bootstrap","webpack:///./index.js","webpack:///./libs/csv2json.js","webpack:///./libs/jsono.js","webpack:///./libs/stock/fetch/fetch.js","webpack:///./libs/stock/fetch/index.js","webpack:///./libs/stock/fetch/ths_a.js","webpack:///./libs/stock/fetch/ths_c.js","webpack:///./libs/stock/fetch/ths_new.js","webpack:///./libs/stock/fetch/ths_p.js","webpack:///./libs/stock/fetch/utils.js","webpack:///./libs/stock/fetch/xgb.js","webpack:///./libs/stock/fetch/ycj.js","webpack:///./libs/tdx.js","webpack:///external \"cheerio-httpcli\"","webpack:///external \"fs\"","webpack:///external \"iconv-lite\"","webpack:///external \"path\"","webpack:///external \"superagent\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./index.js\");\n","/**\r\n * Created by Julien on 2019/2/27.\r\n */\r\n\r\nimport csv2, { csv } from './libs/csv2json'\r\nimport fetch2, { fetch } from './libs/stock/fetch/index'\r\nimport tdx2, { tdx } from './libs/tdx'\r\n\r\nexport default {\r\n    csv: csv2,\r\n    fetch: fetch2,\r\n    tdx: tdx2\r\n}\r\n\r\nexport {csv, fetch, tdx}\r\n","/**\r\n * Created by j on 18/3/10.\r\n */\r\n\r\nimport fs from 'fs'\r\nimport iconv from 'iconv-lite'\r\n\r\n/*\r\n * @todo 解析csv格式文本文件到json文件\r\n * @param csvFile {String}  csv文件名 必须\r\n * @param jsonFile  {String} json文件名\r\n * @param cols  {Array}  要截取的列索引，默认所有列\r\n * @param isCsdStocksJson  {Boolean}  要创建的文件是否是stocks.json\r\n * @returns {Promise<any>}\r\n */\r\nfunction _csv (csvFile, jsonFile, cols, isCsdStocksJson) {\r\n\r\n    jsonFile = jsonFile || csvFile.split('.').shift() + '.json';\r\n    cols = cols || [];\r\n\r\n    //console.log([].slice.call(arguments))\r\n\r\n    // 文字类型数字转为数字类型数字\r\n    cols = cols.map(v => {\r\n        return v * 1\r\n    })\r\n\r\n    // 不同的分割正则\r\n    let split_reg = /\\s{3,}/;  // (1:注意股票名称里包含多余的空格:'新 和 成')\r\n    if (isCsdStocksJson) {  // 主要处理股票列表csv: s.txt, 以退格键进行分割\r\n        split_reg = /[\\t]+/;\r\n    }\r\n\r\n    return new Promise(function (resolve, reject) {\r\n        fs.readFile(csvFile, function (err, data) {\r\n            if (err) return reject(err)\r\n\r\n            data = iconv.decode(data, 'GBK')\r\n\r\n            let rows = data.split('\\r\\n');\r\n\r\n            console.log(`${ csvFile }行数是=> `, rows.length);\r\n\r\n            // 截取对应的列，默认全列\r\n            let col_length = 1;\r\n            let rows2 = [];\r\n            rows.forEach(function (str) {\r\n                let arr = str.split(split_reg);\r\n                col_length = arr.length >= col_length ? arr.length : col_length;\r\n                //console.log(arr.length, arr.join(' '))\r\n                rows2.push(arr);\r\n            });\r\n\r\n            let rows3 = [];\r\n            rows2.forEach(arr => {\r\n                // 如果某一行的列长度小于其它列长度, 判断为冗余行, 则不加入最终json数据\r\n                if (col_length - arr.length > 9) {\r\n                    return console.log('冗余行 => ',col_length, arr.length, arr.join()); // 处理冗余行 (1:注意股票名称里包含多余的空格:'新 和 成')\r\n                }\r\n                if (cols.length === 0) {\r\n                    rows3.push(arr);\r\n                } else {\r\n                    rows3.push(arr.filter(function (v, i) {\r\n                        return cols.indexOf(i) >= 0;\r\n                    }));\r\n                }\r\n            });\r\n\r\n            // 删除列标题\r\n            let th = rows3.shift();\r\n            console.log('列标题是=> ', th);\r\n\r\n            console.log('有效rows length => ', rows3.length);\r\n\r\n            // 删除股票名称中的空白符; 替换'Ａ' 为 'A'\r\n            if (isCsdStocksJson) {\r\n                rows3.forEach(arr => {\r\n                    //console.log(arr.join(' '))\r\n                    if(arr[1]) {\r\n                        arr[1] = arr[1]\r\n                            .replace(/\\s+/img, '')\r\n                            .replace('Ａ', 'A');\r\n                    }\r\n                });\r\n            }\r\n\r\n            let jsonStr = JSON.stringify(rows3, null, '\\t');\r\n            // 如果写入js文件而不是json文件\r\n            if (/\\.js$/.test(jsonFile)) {\r\n                jsonStr = `STOCKS = ${ jsonStr } ;`;\r\n            }\r\n\r\n            // 解析后的数据写入新文件\r\n            fs.writeFileSync(jsonFile, jsonStr);\r\n            console.log(`数据成功写入${ jsonFile }.`);\r\n\r\n            // return json object\r\n            resolve(rows3)\r\n\r\n        });\r\n    })\r\n\r\n}\r\n\r\nexport default _csv\r\n\r\n// 接收对象参数, 包装_csv\r\nexport function csv ({csvFile, jsonFile, cols, isCsdStocksJson}) {\r\n    return _csv(csvFile, jsonFile, cols, isCsdStocksJson)\r\n}\r\n","/*!\r\n * Created by j on 18/11/9.\r\n * 把json文件包装成对象进行增删改查\r\n */\r\n\r\nimport fs from 'fs'\r\nimport path from 'path'\r\n\r\nclass Jo {\r\n\r\n    /**\r\n     *\r\n     * @param jsonPath {String} json file path\r\n     * @param initData {Object|Array}\r\n     */\r\n    constructor (jsonPath, initData = {}) {\r\n\r\n        jsonPath = path.resolve(__dirname, `${ jsonPath }`)\r\n        this.jsonPath = jsonPath\r\n\r\n        if (!fs.existsSync(jsonPath)) {\r\n            //fs.createWriteStream(jsonPath)\r\n            this.json = initData\r\n        } else {\r\n            try {\r\n                let str = fs.readFileSync(this.jsonPath, 'utf8')\r\n                this.json = JSON.parse(str)\r\n            } catch (e) {\r\n                throw new Error(e)\r\n            }\r\n        }\r\n    }\r\n\r\n    merge (obj) {\r\n        Object.assign(this.json, obj)\r\n    }\r\n\r\n    save () {\r\n        fs.writeFileSync(this.jsonPath, JSON.stringify(this.json, null, '\\t'))\r\n    }\r\n\r\n    get (key) {\r\n        if (!key) return this.json\r\n\r\n        let keys = key.split('.')\r\n\r\n        return (function fx (namespace, keys) {\r\n            let k = keys.shift()\r\n            let o = namespace[k]\r\n            if (o && keys.length) return fx(namespace[k], keys)\r\n            return o\r\n        })(this.json, keys)\r\n    }\r\n\r\n    match (key) {\r\n        return this.get(key)\r\n    }\r\n\r\n}\r\n\r\n\r\nexport { Jo }\r\n\r\n\r\nexport default function (jsonPath, initData) {\r\n    return new Jo(jsonPath, initData)\r\n}","/**\r\n * Created by j on 18/8/16.\r\n * 从网页上获取股票信息\r\n */\r\n\r\nimport client from 'cheerio-httpcli'\r\n\r\nimport ths_c from './ths_c.js'\r\nimport ths_new from './ths_new.js'\r\nimport ths_p from './ths_p.js'\r\nimport ycj from './ycj.js'\r\nimport xgb from './xgb.js'\r\n\r\nconst sourceMap = {\r\n    ths_c,\r\n    ths_new,\r\n    ths_p,\r\n    ycj,\r\n    xgb\r\n};\r\n\r\n\r\nclient.set('gzip', true);\r\nclient.set('timeout', 30000);\r\nclient.set('headers', {\r\n    'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.98 Safari/537.34'\r\n});\r\n\r\n/**\r\n *\r\n * @param code {String}\r\n * @param sourceId {String}\r\n * @param delay {Number}\r\n * @returns {Promise<any>}\r\n */\r\nfunction fetch (code, sourceId, delay) {\r\n\r\n    let source = sourceMap[sourceId];\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        //setTimeout(function () {\r\n\r\n        client.fetch(source.url(code), function (err, $, res, body) {\r\n            if (err) return reject(err);\r\n            try {\r\n                let result = source.parse($);\r\n                resolve({result, source_id: sourceId, code});\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n\r\n        //}, delay || 30);\r\n\r\n    });\r\n\r\n}\r\n\r\n\r\nexport default fetch;\r\n","/**\r\n * Created by j on 18/8/18.\r\n */\r\n\r\nimport path from 'path'\r\n\r\nimport fetchX from './fetch'\r\nimport jo from '../../jsono'\r\n\r\nimport thsA from '../fetch/ths_a'\r\n\r\nconst SOURCES = ['ths_new', 'ths_p', 'ths_c', 'ycj', 'xgb'];\r\n\r\nlet timer\r\nlet isStop = false\r\nlet stat = {}\r\n\r\n\r\n/**\r\n * @param stocks {Array}\r\n * @param index {Number}\r\n * @param sources {Array}\r\n * @param csdPath {String}\r\n * @param watcher {Function}\r\n */\r\nfunction start (stocks, index, sources, csdPath, watcher) {\r\n\r\n    let arr = stocks[index];\r\n    if (!arr) {\r\n        stat = {over: true, index: index};\r\n        watcher(stat);\r\n        return console.log(`fetch over, size is ${ index }`);\r\n    }\r\n\r\n    let [code, name] = arr;\r\n    let progress = (index + 1) / stocks.length * 100;\r\n    progress = progress.toFixed(2);\r\n    progress = `${ (index + 1) }/${ stocks.length }`;\r\n    stat = {name, code, index, progress};\r\n    watcher(stat);\r\n\r\n    let promises = sources.map((id, index) => {\r\n        return fetchX(code, id, index * (Math.random() + 0.1) * 5000);\r\n    });\r\n\r\n    // 同花顺同业公司 start\r\n    promises.push(thsA(code));\r\n    // 同花顺同业公司 end\r\n\r\n    Promise.all(promises)\r\n        .then(data => {\r\n\r\n            let sjo = jo(path.resolve(csdPath, `./s/${ code }.json`));\r\n\r\n            sjo.merge({\"名称\": name, \"code\": code});\r\n\r\n            for (let v of data) {\r\n                sjo.merge(v.result);\r\n            }\r\n\r\n            sjo.save();\r\n\r\n            timer = setTimeout(function () {\r\n\r\n                !isStop && start(stocks, index + 1, sources, csdPath, watcher)\r\n\r\n            }, (Math.random() + 0.2) * 5000);\r\n\r\n        })\r\n        .catch(err => {\r\n            console.error(err);\r\n            watcher(stat, err);\r\n        });\r\n\r\n}\r\n\r\n/**\r\n *\r\n * @param csdPath {String} csd目录路径\r\n * @param stocks {Array|String} [['300059', '东方财富']]  股票数组或json文件路径\r\n * @param index {Number|String} 股票数组索引 或者 stock code,如果是stock code, 则需要根据code获取code在股票数组中的索引\r\n * @param sources {Array}  ['ths_new', 'ths_p', 'ths_c'] 数据源ID\r\n * @param watcher {Function}\r\n * @return\r\n */\r\nfunction _fetch (csdPath, stocks, index, sources, watcher = (stats, err) => console.log(stats, err)) {\r\n\r\n    if (!csdPath) throw new Error('必须提供csd数据存储路径.');\r\n\r\n    //return new Promise((resolve, reject) => {\r\n\r\n    if (!stocks) {\r\n        stocks = jo(path.resolve(csdPath, './stocks.json')).json;\r\n    }\r\n\r\n    // 如果提供的参数是json文件路径\r\n    if (typeof stocks === 'string' && /\\.json$/.test(stocks)) {\r\n        stocks = jo(path.resolve(csdPath, stocks)).json;\r\n    }\r\n\r\n    index = index * 1\r\n    // 如果提供的是code，先获取code的索引\r\n    if (/^\\d{6}$/.test('' + index)) {\r\n        for (let i = 0; i < stocks.length; i++) {\r\n            if (stocks[i][0] * 1 === index) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    sources = sources || SOURCES;\r\n\r\n    console.log(`stocks.length is ${ stocks.length }`);\r\n\r\n    isStop = false;\r\n\r\n    // -------------------------------------------------------------------------------- start\r\n\r\n    start(stocks, index, sources, csdPath, (stats) => {\r\n        watcher(stats)\r\n    });\r\n\r\n\r\n    // -------------------------------------------------------------------------------- end\r\n\r\n    //});\r\n\r\n}\r\n\r\n// fetch2用于包装_fetch, 接收对象参数\r\nfunction fetch ({csdPath, stocks, index, sources, watcher}) {\r\n    return _fetch(csdPath, stocks, index, sources, watcher)\r\n}\r\n\r\nfetch.stop = _fetch.stop = function () {\r\n    console.log('clear fetch timer =>', timer)\r\n    clearTimeout(timer)\r\n    isStop = true\r\n    return stat\r\n}\r\n\r\nfetch.SOURCES = _fetch.SOURCES = SOURCES\r\n\r\nexport default _fetch\r\n\r\nexport { fetch }\r\n","/**\r\n * Created by j on 21/7/08.\r\n * 同花顺同业公司 http://basic.10jqka.com.cn/mapp/300799/a_companies_list.json\r\n */\r\n\r\nimport superagent from 'superagent';\r\n\r\nexport default function (code) {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        let url = `http://basic.10jqka.com.cn/mapp/${ code }/a_companies_list.json`;\r\n\r\n        superagent.get(url).accept('json').end((err, res) => {\r\n            if (err) return reject(err);\r\n\r\n            try {\r\n                let result = '';\r\n                let data = res.body.data;\r\n                if(data === undefined) {\r\n                    console.log('没有同业数据。', code);\r\n                    result = {'同业':''};\r\n                    return resolve({result, source_id: 'ths_a', code});\r\n                }\r\n                let item = (data.domestic && data.domestic.company_data[0]) || {list:[ ]};\r\n                let arr = item.list;\r\n                arr = arr.map((item, index) => {\r\n                    return item.name;\r\n                });\r\n                let field = data.field;\r\n\r\n                /*let obj = {};\r\n                obj[field] = arr;\r\n                let result = {'同业': obj};*/\r\n\r\n                arr = arr.join('  ');\r\n                result = {'同业': `${ field }:  ${ arr }`};\r\n\r\n                console.log(JSON.stringify(result, 'null', '\\t'));\r\n                resolve({result, source_id: 'ths_a', code});\r\n            } catch (err) {\r\n                console.log('ths_a catch', err);\r\n                reject(err);\r\n            }\r\n\r\n        });\r\n\r\n    });\r\n}\r\n\r\n","/*!\r\n * Created by j on 18/11/25.\r\n * 同花顺概念页面资料解析: http://basic.10jqka.com.cn/000001/concept.html\r\n */\r\n\r\nimport utils from './utils.js';\r\n\r\nlet {trimAll} = utils;\r\n\r\nexport default {\r\n    url: function (code) {\r\n        return `http://basic.10jqka.com.cn/${ code }/concept.html`;\r\n    },\r\n    parse: function ($) {\r\n        let $table = $('#concept table.gnContent');\r\n        let $gnName = $table.find('tr td.gnName');\r\n        let $extend_content = $table.find('tr.extend_content');\r\n        let concept = {};\r\n        $gnName.each(function (i) {\r\n            let name = trimAll($(this).text());\r\n            concept[name] = trimAll($extend_content.eq(i).text());\r\n        });\r\n        let result = {\r\n            '概念详情': concept\r\n        };\r\n\r\n        console.log(JSON.stringify(result, null, '\\t'));\r\n\r\n        return result;\r\n    }\r\n};\r\n","/**\r\n * Created by j on 18/8/13.\r\n * 同花顺动态页面解析 http://basic.10jqka.com.cn/000001/\r\n */\r\n\r\nimport utils from './utils.js';\r\n\r\nlet {trimAll} = utils;\r\n\r\nexport default {\r\n    url: function (code) {\r\n        return `http://basic.10jqka.com.cn/${ code }/`;\r\n    },\r\n    parse: function ($) {\r\n        let $table = $('#profile table');\r\n        let $table_0_td = $table.eq(0).find('td');\r\n\r\n        let special = $table_0_td.eq(0).text().replace('公司亮点：', '');\r\n        let concept = $table_0_td.eq(4).text()\r\n            .replace('概念贴合度排名：', '')\r\n            .replace('概念强弱排名：', '')\r\n            .replace('涉及概念：', '')\r\n            .replace('详情>>', '');\r\n        //let finance = $td.eq(3).text().replace('财务分析：', '');\r\n\r\n        let chinaCompanyListAll = $('#chinaCompanyListAll').text().replace('A股：', '');\r\n\r\n        let type = $table.eq(1).find('td').eq(3).text().replace('分类：', '');\r\n\r\n        let result = {\r\n            '亮点': trimAll(special),\r\n            '概念': trimAll(concept),\r\n            //'同业': trimAll(chinaCompanyListAll),\r\n            //'财务': trimAll(finance),\r\n            '分类': trimAll(type)\r\n        };\r\n\r\n        console.log(JSON.stringify(result, null, '\\t'));\r\n        return result;\r\n    }\r\n};\r\n","/**\r\n * Created by j on 18/8/16.\r\n * 同花顺公司资料页面解析 http://basic.10jqka.com.cn/000001/company.html\r\n */\r\n\r\nimport utils from './utils.js';\r\n\r\nlet {trimAll} = utils;\r\n\r\nexport default {\r\n    url: function (code) {\r\n        return `http://basic.10jqka.com.cn/${ code }/company.html`;\r\n    },\r\n    parse: function ($) {\r\n        let $td = $('#detail td');\r\n        let full_name = $td.eq(1).text().replace('公司名称：', '');\r\n        let position = $td.eq(2).text().replace('所属地域：', '');\r\n        let business = $td.eq(4).text().replace('所属申万行业：', '');\r\n        let industry = $td.eq(7).text().replace('主营业务：', '');\r\n        let product = $td.eq(8).text().replace('产品名称：', '');\r\n        let result = {\r\n            '全名': trimAll(full_name),\r\n            '地域': trimAll(position),\r\n            '行业': trimAll(business),\r\n            '业务': trimAll(industry),\r\n            '产品': trimAll(product)\r\n        };\r\n        console.log(JSON.stringify(result, null, '\\t'));\r\n        return result;\r\n    }\r\n};\r\n","/**\r\n * utils func\r\n * Created by j on 2019-05-17.\r\n */\r\n\r\n/*String.prototype.j_trim = String.prototype.jTrimAll = function () {\r\n    return this.replace(/\\s+/img, '');\r\n};*/\r\n\r\nfunction trimAll (str) {\r\n    return str.replace(/\\s+/img, '');\r\n}\r\n\r\nexport default {\r\n    trimAll,\r\n}\r\n","/**\r\n * Created by j on 20/1/19.\r\n * 选股宝股票页面数据解析\r\n * 页面数据是异步加载的，get不到，以后解决；\r\n */\r\n\r\nexport default {\r\n    url: function (code) {\r\n        code = code + (/^6/.test(code) ? '.SS' : '.SZ');\r\n        return `https://xuangubao.cn/stock/${ code }`;\r\n    },\r\n    parse: function ($) {\r\n        let $target = $('.stock-info-bkj .related-subject .related-subject-item .related-subject-item-name');\r\n\r\n        console.log($target.length, $target.text());\r\n\r\n        let arr = $target.map(function () {\r\n\r\n            return $(this).text() || '';\r\n        }).get().join('  ');\r\n\r\n        return {\r\n            '概念xgb': arr,\r\n            //'news': $('.tab-panel.active').html(),\r\n        };\r\n\r\n    }\r\n};\r\n","/**\r\n * Created by j on 18/8/16.\r\n * 云财经股票页面数据解析\r\n */\r\n\r\nexport default {\r\n    url: function (code) {\r\n        code = (/^6/.test(code) ? 'sh' : 'sz') + code;\r\n        return `http://www.yuncaijing.com/quote/${ code }.html`;\r\n    },\r\n    parse: function ($) {\r\n        let arr = $('.ralate table tr').map(function () {\r\n            let s = $(this).find('td a').text() || '';\r\n            let s2 = $(this).find('td small').text() || '';\r\n            return s.trim() + '-' + s2.trim();\r\n        }).get().join('  ');\r\n\r\n        let result = {\r\n            '概念y': arr,\r\n            //'news': $('.tab-panel.active').html(),\r\n        };\r\n\r\n        console.log(JSON.stringify(result, null, '\\t'));\r\n        return result;\r\n\r\n    }\r\n};\r\n","/**\r\n * 生成通达信自定义数据\r\n * Created by j on 18/8/13.\r\n */\r\n\r\nimport fs from 'fs'\r\nimport path from 'path'\r\nimport iconv from 'iconv-lite'\r\n\r\nimport jo from './jsono'\r\n\r\n/**\r\n * 创建自定义数据文件\r\n * @param prop {String}\r\n * @param index {Number}\r\n * @param csdPath {String} csd文件夹路径\r\n * @param tempFile {String} 临时使用的通达信自定义数据文件\r\n * @param stocks {Array} stocks list\r\n */\r\nfunction createPropFile (prop, index, csdPath, tempFile, stocks) {\r\n\r\n    let propFile = path.resolve(csdPath, `./${ prop }.txt`);\r\n\r\n    let result = '';\r\n\r\n    stocks.forEach(function (arr, i) {\r\n        let code = arr[0];\r\n        // 通达信自定义数据格式：北证以2标志、上证以1标志、深证以0标志；\r\n        let szh = /^[6]/.test(code) ? 1 : /^[84]/.test(code) ? 2 : 0;\r\n        let sjo = jo(path.resolve(csdPath, `./s/${ code }.json`));\r\n        let _get = (name) => sjo.get(name) || '';\r\n        let text = '';\r\n        let SPC = '  ';\r\n\r\n        console.log(arr[0], arr[1]);\r\n        if (!sjo.json.code) {\r\n            return console.log(`${ arr[0] } : ${ arr[1] } is {}`);\r\n        }\r\n\r\n        switch (prop) {\r\n            case '概念':\r\n                text = _get('概念').replace(/[，]/img, '  ') + SPC + _get('行业').replace(/^.+[—]/, '-') + SPC;\r\n                break;\r\n            case '概念y':\r\n                text = _get('概念y').replace(/[-]\\d+[%]/img, SPC);\r\n                break;\r\n            case '产品':\r\n                text = _get('产品').replace(/[、]/img, SPC);\r\n                break;\r\n            case '业务':\r\n                text = _get('业务') + SPC;\r\n                break;\r\n            case '概念详情':\r\n                text = Object.keys(_get('概念详情')).join(SPC);\r\n                break;\r\n            default:  // 对应 =>  '全名', '备注', '概念z'\r\n                text = _get(prop) + SPC;\r\n        }\r\n        result += [szh, code, index, text, '0.000'].join('|') + '\\r\\n';\r\n    });\r\n\r\n    // 创建单个自定义数据文件\r\n    fs.writeFileSync(propFile, result);\r\n    // 合并多个自定义数据文件\r\n    fs.writeFileSync(tempFile, result, {encoding: 'utf8', flag: 'a'});\r\n}\r\n\r\n/**\r\n * 根据csd数据创建通达信自定义数据文件\r\n * @param csdPath {String} csd数据目录\r\n * @param tdxFile {String} default: /Volumes/C/new_jyplug/T0002/signals/extern_user.txt\r\n * @param props {String|Array} 默认:['概念', '概念y', '产品', '业务', '全名', '备注', '概念z'] => 对应通达信自定义数据\r\n * @param [cb] {Function} 添加自定义数据项的回调函数\r\n */\r\nfunction _tdx (csdPath, tdxFile, props = ['概念', '概念y', '产品', '业务', '全名', '备注', '概念z','亮点', '同业'], cb) {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        let absolutePathReg = /^\\//;\r\n        // windows系统绝对路径并不是以/开头\r\n        // if (!absolutePathReg.test(csdPath) || !absolutePathReg.test(tdxFile)) {\r\n        //     let msg = '必须提供csd数据存储路径和通达信自定义数据文件路径.';\r\n        //     console.log(msg);\r\n        //     return reject(new Error(msg));\r\n        // }\r\n\r\n        let stocks = jo(path.resolve(csdPath, './stocks.json')).json;\r\n\r\n        // 创建文件用于临时保存自定义数据, 之后读取内容写入通达信目录\r\n        let tempFile = path.resolve(csdPath, tdxFile.split(/[/\\\\]/).pop());\r\n        fs.writeFileSync(tempFile, '');\r\n\r\n        if (typeof props === 'string') {\r\n            props = [props];\r\n        }\r\n\r\n        props.forEach((prop, index) => {\r\n            createPropFile(prop, index + 1, csdPath, tempFile, stocks);\r\n        });\r\n\r\n        // 只生成特定字段数据, 用于手动更新特定字段自定义数据, 譬如只更新云财经概念\r\n        if (props.length === 1) return resolve(path.resolve(csdPath, `${ props[0] }.txt`));\r\n\r\n        if (cb) {\r\n            cb(tempFile, csdPath, stocks);\r\n        }\r\n\r\n        // 一次性更新所有自定义数据\r\n        fs.createReadStream(tempFile)\r\n            .pipe(iconv.decodeStream('utf8'))\r\n            .pipe(iconv.encodeStream('GBK'))\r\n            .pipe(fs.createWriteStream(tdxFile));\r\n\r\n        console.log(`****数据写入 ${ tdxFile }, 通达信自定义数据更新完成****`);\r\n\r\n        resolve(tempFile);\r\n\r\n    });\r\n\r\n}\r\n\r\n\r\nexport default _tdx\r\n\r\n// tdx用于包装_tdx, 接收对象参数\r\nexport function tdx ({csdPath, tdxFile, props}) {\r\n    return _tdx(csdPath, tdxFile, props)\r\n}\r\n","module.exports = require(\"cheerio-httpcli\");","module.exports = require(\"fs\");","module.exports = require(\"iconv-lite\");","module.exports = require(\"path\");","module.exports = require(\"superagent\");"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAIA;AACA;AAEA;;;;;;;;;AAQA;AAEA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AC7GA;;;;AAKA;AACA;AACA;AACA;;;AAEA;;;;;AAKA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;;;;AAKA;AAGA;AACA;AACA;;;;;;;;;;;;AClEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AACA;AACA;AADA;AAIA;;;;;;;;AAOA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5DA;;;AAIA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAGA;;;;;;;;AAOA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AACA;AASA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AAEA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AACA;AADA;AAMA;AAAA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;;;;;;;;;;;AASA;AAAA;AAAA;AAAA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAGA;AACA;AACA;AAKA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;AChJA;AAAA;AAAA;AAAA;;;;AAKA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AAIA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;;;;;;;;;;;;AChDA;AAAA;AAAA;;;;AAKA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAIA;AAEA;AACA;AApBA;;;;;;;;;;;;ACTA;AAAA;AAAA;;;;AAKA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAMA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AA9BA;;;;;;;;;;;;ACTA;AAAA;AAAA;;;;AAKA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AApBA;;;;;;;;;;;;ACTA;AAAA;;;;;AAKA;;;AAIA;AACA;AACA;AACA;AACA;AACA;AADA;;;;;;;;;;;;ACbA;AAAA;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AApBA;;;;;;;;;;;;ACNA;AAAA;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AAEA;AApBA;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAKA;AACA;AACA;AAEA;AAEA;;;;;;;;;AAQA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAjBA;AACA;AAkBA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;;;;;;;;;AAOA;AAAA;AAAA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;AC/HA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}