{"version":3,"file":"cli.js","sources":["webpack:///webpack/bootstrap","webpack:///./bin/csv2json.js","webpack:///./bin/fetch.js","webpack:///./bin/htm2txt.js","webpack:///./bin/merge.js","webpack:///./bin/tdx.js","webpack:///./cli.js","webpack:///./libs/csv2json.js","webpack:///./libs/htm2txt.js","webpack:///./libs/jsono.js","webpack:///./libs/merge.js","webpack:///./libs/stock/fetch/fetch.js","webpack:///./libs/stock/fetch/index.js","webpack:///./libs/stock/fetch/ths_a.js","webpack:///./libs/stock/fetch/ths_c.js","webpack:///./libs/stock/fetch/ths_new.js","webpack:///./libs/stock/fetch/ths_p.js","webpack:///./libs/stock/fetch/utils.js","webpack:///./libs/stock/fetch/xgb.js","webpack:///./libs/stock/fetch/ycj.js","webpack:///./libs/tdx.js","webpack:///./libs/walk.js","webpack:///external \"chardet\"","webpack:///external \"cheerio\"","webpack:///external \"cheerio-httpcli\"","webpack:///external \"commander\"","webpack:///external \"fs\"","webpack:///external \"iconv-lite\"","webpack:///external \"path\"","webpack:///external \"superagent\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./cli.js\");\n","/*!\n * Created by j on 18/10/1.\n */\n\nimport csv from '../libs/csv2json.js'\n\nexport default function (program) {\n\n    program\n        .command('csv')\n        .description('csv文件转为json文件, Usage: jhandy csv -s xx.txt')\n        .option('-s, --csv <csv_file>', \"csv文件\")\n        .option('-D, --dist [json_file]', 'json文件')\n        .option('-c, --cols [cols]', '\"0, 1, 3\", 指定截取的csv列, 默认截取所有列')\n        .option('-d, --use-default', '使用默认设置')\n        .action(function (cmd) {\n            let s = cmd.csv\n            let dist = cmd.dist\n            let c = cmd.cols && cmd.cols.split(/\\D+/)\n            let useDefault = cmd.useDefault\n            if (!s) {\n                return cmd.help ? cmd.help() : console.log('没有提供csv文件参数.', cmd)\n            }\n            if (!dist && useDefault) {\n                if (s === 'stocks.txt') {\n                    csv(s, '/Users/j/dev/csd/stocks.json', [0, 1], useDefault)\n                    return\n                }\n                if (s === 't.txt') {\n                    csv(s, '/Users/j/dev/crx-jhandy/js/data/T.js', [0, 1], useDefault)\n                    return\n                }\n                csv(s, s.replace(/\\.\\w+$/, '.json'), c, useDefault)\n                return\n            }\n\n            csv(s, dist, c, useDefault)\n        })\n\n}\n","/**\n * Created by j on 18/8/18.\n */\n\nimport path from 'path'\n\nimport fetch from '../libs/stock/fetch/index.js'\n\nexport default function (program) {\n\n    program\n        .command('fetch')\n        .description('从网络爬取股票数据, Usage: jhandy fetch -s \"ths_new ths_p\" -c 300059')\n        .option('-s, --sources <source_id>', '要爬取的数据源网页id:ths_new, ths_p, ths_c, ycj, 默认爬取全部数据源')\n        .option('-i, --index <index>', '股票列表索引位置,主要用于上次爬取数据中断', function (val) {\n            return val * 1\n        })\n        .option('-c, --stocks <stocks>', 'x.json 或者 000001,000002')\n        .option('-p, --csd-path <csd-path>', 'csd路径')\n        .action(function (cmd) {\n            let {sources, index, stocks, csdPath} = cmd;\n\n            csdPath = csdPath || '/Users/j/dev/csd';\n            index = index || 0;\n            sources = sources ? sources.split(/\\s+/img) : fetch.SOURCES;\n\n            if (stocks) {\n                // 如果stocks是json文件\n                if (/\\.json$/.test(stocks)) {\n                    // 绝对路径 或 相对路径\n                    stocks = /^\\//.test(stocks) ? stocks : path.resolve(process.cwd(), stocks)\n                }\n                // 或者是股票代码\n                else if (stocks.match(/\\d{6}/g)) {\n                    stocks = stocks.match(/\\d{6}/g)\n                    stocks = stocks.map((v, i) => {\n                        return [v, '']\n                    })\n                }\n            }\n\n            fetch(csdPath, stocks, index, sources);\n\n        });\n\n}\n","/*!\n * Created by j on 18/10/27.\n */\n\nimport path from 'path'\n\nimport h2t from '../libs/htm2txt.js'\n\nexport default function (program) {\n\n    program\n        .command('h2t')\n        .description('html转为txt. Usage: jhandy h2t or jhandy h2t -p \"https://x.com/y.html\" -q body')\n        .option('-p, --path [html文件 | 本地目录 | url地址]', '可选; html文件 | 本地目录 | url地址, 默认命令行所在目录;')\n        .option('-q, --query [jquery选择符]', '可选; jquery选择符;')\n        .action(function (cmd) {\n            let p = cmd.path || process.cwd();\n            let q = cmd.query || '#showcontent';\n            // 绝对路径 or 相对路径\n            p = /^\\//img.test(p) ? p : path.join(process.cwd(), p);\n\n            h2t(p, q);\n\n        });\n\n}\n","/*!\n * Created by j on 18/10/1.\n */\n\nimport path from 'path'\n\nimport merge from '../libs/merge.js'\n\nexport default function (program) {\n\n    program\n        .command('merge')\n        .description('合并当前目录序列文本文件到一个文件. Usage: jhandy merge')\n        .option('-p, --path [p]', \"目标目录. 默认命令行所在目录\")\n        .action(function (cmd) {\n            let p = cmd.path || process.cwd()\n            // 绝对路径 or 相对路径\n            p = /^\\//img.test(p) ? p : path.join(process.cwd(), p)\n\n            merge(p);\n        });\n\n}\n","/**\n * Created by j on 18/8/18.\n */\n\nimport tdx from '../libs/tdx'\n\nexport default function (program) {\n\n    program\n        .command('tdx')\n        .description('通达信自定义数据输出, Usage: jhandy tdx -d or jhandy tdx -p \"概念z\" ')\n        .option('-c, --csd-path [csd路径]', 'csd数据路径')\n        .option('-f, --tdx-file [extern_user.txt 路径]', '通达信自定义数据文件路径')\n        .option('-p, --props [prop name]', \"props: ['概念', '概念y', '产品', '业务', '全名', '备注', '概念z']\")\n        .option('-d, --use-default', '使用default选项, 任意目录都可执行;')\n        .action(function (cmd) {\n            let {csdPath, tdxFile, props, useDefault} = cmd;\n            if (useDefault) {\n                csdPath = '/Users/j/dev/csd';\n                tdxFile = '/Volumes/C/new_jyplug/T0002/signals/extern_user.txt';\n            }\n\n            // console.log(cmd, csdPath, tdxFile, prop, useDefault)\n\n            tdx(csdPath, tdxFile, props && props.split(/\\s+|,/img));\n        })\n\n}\n","/**\n * 命令行调用接口\n * Created by Julien on 2017/4/15.\n */\n\nimport program from 'commander'\n\nimport csv from './bin/csv2json.js'\nimport fetch from './bin/fetch.js'\nimport tdx from './bin/tdx.js'\nimport merge from './bin/merge.js'\nimport htm2txt from './bin/htm2txt.js'\n\nprogram.version(VERSION, '-v, --version').usage('<sub-command>');\n\n// 根据csv文件输出json文件\ncsv(program)\n\n// 从网络获取股票数据, 比如同花顺概念资料\nfetch(program)\n\n// 通达信自定义数据输出\ntdx(program)\n\n// html转为txt文件\nhtm2txt(program)\n\n// 合并目录里的序列文本文件\nmerge(program)\n\n// 解析命令行提供的参数\nprogram.parse(process.argv)\n\n// 无参数, 输出帮助\nif(!program.args.length) {\n    program.help()\n}\n","/**\n * Created by j on 18/3/10.\n */\n\nimport fs from 'fs'\nimport iconv from 'iconv-lite'\n\n/*\n * @todo 解析csv格式文本文件到json文件\n * @param csvFile {String}  csv文件名 必须\n * @param jsonFile  {String} json文件名\n * @param cols  {Array}  要截取的列索引，默认所有列\n * @param isCsdStocksJson  {Boolean}  要创建的文件是否是stocks.json\n * @returns {Promise<any>}\n */\nfunction _csv (csvFile, jsonFile, cols, isCsdStocksJson) {\n\n    jsonFile = jsonFile || csvFile.split('.').shift() + '.json';\n    cols = cols || [];\n\n    //console.log([].slice.call(arguments))\n\n    // 文字类型数字转为数字类型数字\n    cols = cols.map(v => {\n        return v * 1\n    })\n\n    // 不同的分割正则\n    let split_reg = /\\s{3,}/;  // (1:注意股票名称里包含多余的空格:'新 和 成')\n    if (isCsdStocksJson) {  // 主要处理股票列表csv: s.txt, 以退格键进行分割\n        split_reg = /[\\t]+/;\n    }\n\n    return new Promise(function (resolve, reject) {\n        fs.readFile(csvFile, function (err, data) {\n            if (err) return reject(err)\n\n            data = iconv.decode(data, 'GBK')\n\n            let rows = data.split('\\r\\n');\n\n            console.log(`${ csvFile }行数是=> `, rows.length);\n\n            // 截取对应的列，默认全列\n            let col_length = 1;\n            let rows2 = [];\n            rows.forEach(function (str) {\n                let arr = str.split(split_reg);\n                col_length = arr.length >= col_length ? arr.length : col_length;\n                //console.log(arr.length, arr.join(' '))\n                rows2.push(arr);\n            });\n\n            let rows3 = [];\n            rows2.forEach(arr => {\n                // 如果某一行的列长度小于其它列长度, 判断为冗余行, 则不加入最终json数据\n                if (col_length - arr.length > 2) {\n                    return console.log('冗余行 => ',col_length, arr.length, arr.join()); // 处理冗余行 (1:注意股票名称里包含多余的空格:'新 和 成')\n                }\n                if (cols.length === 0) {\n                    rows3.push(arr);\n                } else {\n                    rows3.push(arr.filter(function (v, i) {\n                        return cols.indexOf(i) >= 0;\n                    }));\n                }\n            });\n\n            // 删除列标题\n            let th = rows3.shift();\n            console.log('列标题是=> ', th);\n\n            console.log('有效rows length => ', rows3.length);\n\n            // 删除股票名称中的空白符; 替换'Ａ' 为 'A'\n            if (isCsdStocksJson) {\n                rows3.forEach(arr => {\n                    //console.log(arr.join(' '))\n                    if(arr[1]) {\n                        arr[1] = arr[1]\n                            .replace(/\\s+/img, '')\n                            .replace('Ａ', 'A');\n                    }\n                });\n            }\n\n            let jsonStr = JSON.stringify(rows3, null, '\\t');\n            // 如果写入js文件而不是json文件\n            if (/\\.js$/.test(jsonFile)) {\n                jsonStr = `STOCKS = ${ jsonStr } ;`;\n            }\n\n            // 解析后的数据写入新文件\n            fs.writeFileSync(jsonFile, jsonStr);\n            console.log(`数据成功写入${ jsonFile }.`);\n\n            // return json object\n            resolve(rows3)\n\n        });\n    })\n\n}\n\nexport default _csv\n\n// 接收对象参数, 包装_csv\nexport function csv ({csvFile, jsonFile, cols, isCsdStocksJson}) {\n    return _csv(csvFile, jsonFile, cols, isCsdStocksJson)\n}\n","/*!\n * Created by j on 18/10/27.\n */\n\nimport fs from 'fs'\n\nimport chardet from 'chardet'\nimport iconv from 'iconv-lite'\nimport cheerio from 'cheerio'\nimport client from 'cheerio-httpcli'\n\nimport walk from './walk.js'\n\n/**\n * 从html解析出完整的dom对象\n * @param html_path\n * @returns {*}\n */\nfunction get$ (html_path) {\n    //let eo = chardet.detectFileAllSync(html_path); //console.log(eo);\n    let buf = fs.readFileSync(html_path); // return buffer\n    return cheerio.load(iconv.decode(buf, 'utf8'));\n}\n\n\n/**\n * 从html解析出txt.\n * @param path html文件路径\n * @param query jquery选择符\n */\nexport default function (path, query) {\n\n    if (/^https?:/img.test(path)) {\n\n        client.fetch(path, {}, function (err, $, res, body) {\n\n        });\n\n    } else {\n\n        walk(path, function (file) {\n\n            console.log(file);\n\n            let reg = /\\.html?$/;\n\n            // 只处理html文件\n            if (reg.test(file)) {\n\n                let file_name = file.replace(reg, '.txt');\n\n                let $ = get$(file);\n\n                $(query).find('br').replaceWith('<p>^</p>');\n                let str = $(query).text().replace(/\\^+/img, '\\r\\n');\n\n                fs.writeFileSync(file_name, str);\n\n            }\n\n        });\n\n    }\n\n}","/*!\n * Created by j on 18/11/9.\n * 把json文件包装成对象进行增删改查\n */\n\nimport fs from 'fs'\nimport path from 'path'\n\nclass Jo {\n\n    /**\n     *\n     * @param jsonPath {String} json file path\n     * @param initData {Object|Array}\n     */\n    constructor (jsonPath, initData = {}) {\n\n        jsonPath = path.resolve(__dirname, `${ jsonPath }`)\n        this.jsonPath = jsonPath\n\n        if (!fs.existsSync(jsonPath)) {\n            //fs.createWriteStream(jsonPath)\n            this.json = initData\n        } else {\n            try {\n                let str = fs.readFileSync(this.jsonPath, 'utf8')\n                this.json = JSON.parse(str)\n            } catch (e) {\n                throw new Error(e)\n            }\n        }\n    }\n\n    merge (obj) {\n        Object.assign(this.json, obj)\n    }\n\n    save () {\n        fs.writeFileSync(this.jsonPath, JSON.stringify(this.json, null, '\\t'))\n    }\n\n    get (key) {\n        if (!key) return this.json\n\n        let keys = key.split('.')\n\n        return (function fx (namespace, keys) {\n            let k = keys.shift()\n            let o = namespace[k]\n            if (o && keys.length) return fx(namespace[k], keys)\n            return o\n        })(this.json, keys)\n    }\n\n    match (key) {\n        return this.get(key)\n    }\n\n}\n\n\nexport { Jo }\n\n\nexport default function (jsonPath, initData) {\n    return new Jo(jsonPath, initData)\n}","/**\n * Created by Julien on 2017/2/27.\n */\n\nimport fs from 'fs'\n\nimport walk from '../libs/walk.js'\n\n/**\n * 根据文件名中包含的数字,字母ab, 上中下对文件进行比较,据此排序\n * @param a {String} file name\n * @param b {String} file name\n */\nfunction x (a, b) {\n    let reg = /(\\d+)|[上中下]|[a-b]/img;\n    let ar = a.match(reg);\n    let br = b.match(reg);\n}\n\n/**\n * 从文件名里获取数字序号\n * @param file_name\n * @returns {*|Array}\n */\nfunction get_d (file_name) {\n    let arr = file_name.match(/\\d+/g) || [];\n    if (!arr.length) return;\n    arr.length === 1 && arr.unshift(arr[0]);\n    arr.push(file_name);\n    return arr;\n}\n\nexport default function (path) {\n\n    console.log(path);\n\n    let dir_name = path.split('/');\n    dir_name = dir_name.pop();\n    console.log(dir_name);\n\n    fs.readdir(path, function (err, files) {\n        if (err) {\n            return console.error(err);\n        }\n        let arr = [];\n        let item;\n\n        for (let i = 0; i < files.length; i += 1) {\n            item = files[i];\n            if (/\\.txt$/i.test(item)) {\n                item = get_d(item);\n                item && arr.push(item);\n            }\n        }\n\n        //对文件进行排序\n        //截取文件名里的最大序号\n        arr.sort(function (a, b) {\n            return a[1] * 1 - b[1] * 1;\n        });\n\n        console.log(arr);\n\n        let new_txt = `${ dir_name } ( ${ arr[0][0] }-${ arr[arr.length - 1][1] } ).txt`;\n\n        // 创建新文本文件, 用于保存合并内容\n        fs.writeFileSync(new_txt, '');\n\n        arr.forEach(function (v) {\n            let str = fs.readFileSync(v[2]);\n            fs.appendFile(new_txt, str, function (err) {\n                err && console.error(err);\n            });\n        });\n\n    });\n\n}\n\n\n","/**\n * Created by j on 18/8/16.\n * 从网页上获取股票信息\n */\n\nimport client from 'cheerio-httpcli'\n\nimport ths_c from './ths_c.js'\nimport ths_new from './ths_new.js'\nimport ths_p from './ths_p.js'\nimport ycj from './ycj.js'\nimport xgb from './xgb.js'\n\nconst sourceMap = {\n    ths_c,\n    ths_new,\n    ths_p,\n    ycj,\n    xgb\n};\n\n\nclient.set('gzip', true);\nclient.set('timeout', 30000);\nclient.set('headers', {\n    'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.98 Safari/537.34'\n});\n\n/**\n *\n * @param code {String}\n * @param sourceId {String}\n * @param delay {Number}\n * @returns {Promise<any>}\n */\nfunction fetch (code, sourceId, delay) {\n\n    let source = sourceMap[sourceId];\n\n    return new Promise((resolve, reject) => {\n\n        //setTimeout(function () {\n\n        client.fetch(source.url(code), function (err, $, res, body) {\n            if (err) return reject(err);\n            try {\n                let result = source.parse($);\n                resolve({result, source_id: sourceId, code});\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        //}, delay || 30);\n\n    });\n\n}\n\n\nexport default fetch;\n","/**\n * Created by j on 18/8/18.\n */\n\nimport path from 'path'\n\nimport fetchX from './fetch'\nimport jo from '../../jsono'\n\nimport thsA from '../fetch/ths_a'\n\nconst SOURCES = ['ths_new', 'ths_p', 'ths_c', 'ycj', 'xgb'];\n\nlet timer\nlet isStop = false\nlet stat = {}\n\n\n/**\n * @param stocks {Array}\n * @param index {Number}\n * @param sources {Array}\n * @param csdPath {String}\n * @param watcher {Function}\n */\nfunction start (stocks, index, sources, csdPath, watcher) {\n\n    let arr = stocks[index];\n    if (!arr) {\n        stat = {over: true, index: index};\n        watcher(stat);\n        return console.log(`fetch over, size is ${ index }`);\n    }\n\n    let [code, name] = arr;\n    let progress = (index + 1) / stocks.length * 100;\n    progress = progress.toFixed(2);\n    progress = `${ (index + 1) }/${ stocks.length }`;\n    stat = {name, code, index, progress};\n    watcher(stat);\n\n    let promises = sources.map((id, index) => {\n        return fetchX(code, id, index * (Math.random() + 0.1) * 5000);\n    });\n\n    // 同花顺同业公司 start\n    promises.push(thsA(code));\n    // 同花顺同业公司 end\n\n    Promise.all(promises)\n        .then(data => {\n\n            let sjo = jo(path.resolve(csdPath, `./s/${ code }.json`));\n\n            sjo.merge({\"名称\": name, \"code\": code});\n\n            for (let v of data) {\n                sjo.merge(v.result);\n            }\n\n            sjo.save();\n\n            timer = setTimeout(function () {\n\n                !isStop && start(stocks, index + 1, sources, csdPath, watcher)\n\n            }, (Math.random() + 0.2) * 5000);\n\n        })\n        .catch(err => {\n            console.error(err);\n            watcher(stat, err);\n        });\n\n}\n\n/**\n *\n * @param csdPath {String} csd目录路径\n * @param stocks {Array|String} [['300059', '东方财富']]  股票数组或json文件路径\n * @param index {Number|String} 股票数组索引 或者 stock code,如果是stock code, 则需要根据code获取code在股票数组中的索引\n * @param sources {Array}  ['ths_new', 'ths_p', 'ths_c'] 数据源ID\n * @param watcher {Function}\n * @return\n */\nfunction _fetch (csdPath, stocks, index, sources, watcher = (stats, err) => console.log(stats, err)) {\n\n    if (!csdPath) throw new Error('必须提供csd数据存储路径.');\n\n    //return new Promise((resolve, reject) => {\n\n    if (!stocks) {\n        stocks = jo(path.resolve(csdPath, './stocks.json')).json;\n    }\n\n    // 如果提供的参数是json文件路径\n    if (typeof stocks === 'string' && /\\.json$/.test(stocks)) {\n        stocks = jo(path.resolve(csdPath, stocks)).json;\n    }\n\n    index = index * 1\n    // 如果提供的是code，先获取code的索引\n    if (/^\\d{6}$/.test('' + index)) {\n        for (let i = 0; i < stocks.length; i++) {\n            if (stocks[i][0] * 1 === index) {\n                index = i;\n                break;\n            }\n        }\n    }\n\n    sources = sources || SOURCES;\n\n    console.log(`stocks.length is ${ stocks.length }`);\n\n    isStop = false;\n\n    // -------------------------------------------------------------------------------- start\n\n    start(stocks, index, sources, csdPath, (stats) => {\n        watcher(stats)\n    });\n\n\n    // -------------------------------------------------------------------------------- end\n\n    //});\n\n}\n\n// fetch2用于包装_fetch, 接收对象参数\nfunction fetch ({csdPath, stocks, index, sources, watcher}) {\n    return _fetch(csdPath, stocks, index, sources, watcher)\n}\n\nfetch.stop = _fetch.stop = function () {\n    console.log('clear fetch timer =>', timer)\n    clearTimeout(timer)\n    isStop = true\n    return stat\n}\n\nfetch.SOURCES = _fetch.SOURCES = SOURCES\n\nexport default _fetch\n\nexport { fetch }\n","/**\n * Created by j on 21/7/08.\n * 同花顺同业公司 http://basic.10jqka.com.cn/mapp/300799/a_companies_list.json\n */\n\nimport superagent from 'superagent';\n\nexport default function (code) {\n\n    return new Promise((resolve, reject) => {\n\n        let url = `http://basic.10jqka.com.cn/mapp/${ code }/a_companies_list.json`;\n\n        superagent.get(url).accept('json').end((err, res) => {\n            if (err) return reject(err);\n\n            try {\n                let result = '';\n                let data = res.body.data;\n                if(data === undefined) {\n                    console.log('没有同业数据。', code);\n                    result = {'同业':''};\n                    return resolve({result, source_id: 'ths_a', code});\n                }\n                let item = (data.domestic && data.domestic.company_data[0]) || {list:[ ]};\n                let arr = item.list;\n                arr = arr.map((item, index) => {\n                    return item.name;\n                });\n                let field = data.field;\n\n                /*let obj = {};\n                obj[field] = arr;\n                let result = {'同业': obj};*/\n\n                arr = arr.join('  ');\n                result = {'同业': `${ field }:  ${ arr }`};\n\n                console.log(JSON.stringify(result, 'null', '\\t'));\n                resolve({result, source_id: 'ths_a', code});\n            } catch (err) {\n                reject(err);\n            }\n\n        });\n\n    });\n}\n\n","/*!\n * Created by j on 18/11/25.\n * 同花顺概念页面资料解析: http://basic.10jqka.com.cn/000001/concept.html\n */\n\nimport utils from './utils.js';\n\nlet {trimAll} = utils;\n\nexport default {\n    url: function (code) {\n        return `http://basic.10jqka.com.cn/${ code }/concept.html`;\n    },\n    parse: function ($) {\n        let $table = $('#concept table.gnContent');\n        let $gnName = $table.find('tr td.gnName');\n        let $extend_content = $table.find('tr.extend_content');\n        let concept = {};\n        $gnName.each(function (i) {\n            let name = trimAll($(this).text());\n            concept[name] = trimAll($extend_content.eq(i).text());\n        });\n        let result = {\n            '概念详情': concept\n        };\n\n        console.log(JSON.stringify(result, null, '\\t'));\n\n        return result;\n    }\n};\n","/**\n * Created by j on 18/8/13.\n * 同花顺动态页面解析 http://basic.10jqka.com.cn/000001/\n */\n\nimport utils from './utils.js';\n\nlet {trimAll} = utils;\n\nexport default {\n    url: function (code) {\n        return `http://basic.10jqka.com.cn/${ code }/`;\n    },\n    parse: function ($) {\n        let $table = $('#profile table');\n        let $table_0_td = $table.eq(0).find('td');\n\n        let special = $table_0_td.eq(0).text().replace('公司亮点：', '');\n        let concept = $table_0_td.eq(4).text()\n            .replace('概念贴合度排名：', '')\n            .replace('概念强弱排名：', '')\n            .replace('涉及概念：', '')\n            .replace('详情>>', '');\n        //let finance = $td.eq(3).text().replace('财务分析：', '');\n\n        let chinaCompanyListAll = $('#chinaCompanyListAll').text().replace('A股：', '');\n\n        let type = $table.eq(1).find('td').eq(3).text().replace('分类：', '');\n\n        let result = {\n            '亮点': trimAll(special),\n            '概念': trimAll(concept),\n            '同业': trimAll(chinaCompanyListAll),\n            //'财务': trimAll(finance),\n            '分类': trimAll(type)\n        };\n\n        console.log(JSON.stringify(result, null, '\\t'));\n        return result;\n    }\n};\n","/**\n * Created by j on 18/8/16.\n * 同花顺公司资料页面解析 http://basic.10jqka.com.cn/000001/company.html\n */\n\nimport utils from './utils.js';\n\nlet {trimAll} = utils;\n\nexport default {\n    url: function (code) {\n        return `http://basic.10jqka.com.cn/${ code }/company.html`;\n    },\n    parse: function ($) {\n        let $td = $('#detail td');\n        let full_name = $td.eq(1).text().replace('公司名称：', '');\n        let position = $td.eq(2).text().replace('所属地域：', '');\n        let business = $td.eq(4).text().replace('所属申万行业：', '');\n        let industry = $td.eq(7).text().replace('主营业务：', '');\n        let product = $td.eq(8).text().replace('产品名称：', '');\n        let result = {\n            '全名': trimAll(full_name),\n            '地域': trimAll(position),\n            '行业': trimAll(business),\n            '业务': trimAll(industry),\n            '产品': trimAll(product)\n        };\n        console.log(JSON.stringify(result, null, '\\t'));\n        return result;\n    }\n};\n","/**\n * utils func\n * Created by j on 2019-05-17.\n */\n\n/*String.prototype.j_trim = String.prototype.jTrimAll = function () {\n    return this.replace(/\\s+/img, '');\n};*/\n\nfunction trimAll (str) {\n    return str.replace(/\\s+/img, '');\n}\n\nexport default {\n    trimAll,\n}\n","/**\n * Created by j on 20/1/19.\n * 选股宝股票页面数据解析\n * 页面数据是异步加载的，get不到，以后解决；\n */\n\nexport default {\n    url: function (code) {\n        code = code + (/^6/.test(code) ? '.SS' : '.SZ');\n        return `https://xuangubao.cn/stock/${ code }`;\n    },\n    parse: function ($) {\n        let $target = $('.stock-info-bkj .related-subject .related-subject-item .related-subject-item-name');\n\n        console.log($target.length, $target.text());\n\n        let arr = $target.map(function () {\n\n            return $(this).text() || '';\n        }).get().join('  ');\n\n        return {\n            '概念xgb': arr,\n            //'news': $('.tab-panel.active').html(),\n        };\n\n    }\n};\n","/**\n * Created by j on 18/8/16.\n * 云财经股票页面数据解析\n */\n\nexport default {\n    url: function (code) {\n        code = (/^6/.test(code) ? 'sh' : 'sz') + code;\n        return `http://www.yuncaijing.com/quote/${ code }.html`;\n    },\n    parse: function ($) {\n        let arr = $('.ralate table tr').map(function () {\n            let s = $(this).find('td a').text() || '';\n            let s2 = $(this).find('td small').text() || '';\n            return s.trim() + '-' + s2.trim();\n        }).get().join('  ');\n\n        let result = {\n            '概念y': arr,\n            //'news': $('.tab-panel.active').html(),\n        };\n\n        console.log(JSON.stringify(result, null, '\\t'));\n        return result;\n\n    }\n};\n","/**\n * 生成通达信自定义数据\n * Created by j on 18/8/13.\n */\n\nimport fs from 'fs'\nimport path from 'path'\nimport iconv from 'iconv-lite'\n\nimport jo from './jsono'\n\n/**\n * 创建自定义数据文件\n * @param prop {String}\n * @param index {Number}\n * @param csdPath {String} csd文件夹路径\n * @param tempFile {String} 临时使用的通达信自定义数据文件\n * @param stocks {Array} stocks list\n */\nfunction createPropFile (prop, index, csdPath, tempFile, stocks) {\n\n    let propFile = path.resolve(csdPath, `./${ prop }.txt`);\n\n    let result = '';\n\n    stocks.forEach(function (arr, i) {\n        let code = arr[0];\n        let szh = /^6/.test(code) ? 1 : 0;\n        let sjo = jo(path.resolve(csdPath, `./s/${ code }.json`));\n        let _get = (name) => sjo.get(name) || '';\n        let text = '';\n\n        console.log(arr[0], arr[1]);\n        if (!sjo.json.code) {\n            return console.log(`${ arr[0] } : ${ arr[1] } is {}`);\n        }\n\n        switch (prop) {\n            case '概念':\n                text = _get('概念').replace(/[，]/img, '  ') + '  ' + _get('行业').replace(/^.+[—]/, '-') + '  ' + _get('概念z') + '  ';\n                break;\n            case '概念y':\n                text = _get('概念y').replace(/[-]\\d+[%]/img, '  ');\n                break;\n            case '产品':\n                text = _get('产品').replace(/[、]/img, '  ');\n                break;\n            case '业务':\n                text = _get('业务') + '  ';\n                break;\n            default:  // 对应 =>  '全名', '备注', '概念z'\n                text = _get(prop) + '  ';\n        }\n        result += [szh, code, index, text, '0.000'].join('|') + '\\r\\n';\n    });\n\n    // 创建单个自定义数据文件\n    fs.writeFileSync(propFile, result);\n    // 合并多个自定义数据文件\n    fs.writeFileSync(tempFile, result, {encoding: 'utf8', flag: 'a'});\n}\n\n/**\n * 根据csd数据创建通达信自定义数据文件\n * @param csdPath {String} csd数据目录\n * @param tdxFile {String} default: /Volumes/C/new_jyplug/T0002/signals/extern_user.txt\n * @param props {String|Array} 默认:['概念', '概念y', '产品', '业务', '全名', '备注', '概念z'] => 对应通达信自定义数据\n * @param [cb] {Function} 添加自定义数据项的回调函数\n */\nfunction _tdx (csdPath, tdxFile, props = ['概念', '概念y', '产品', '业务', '全名', '备注', '概念z','亮点', '同业'], cb) {\n\n    return new Promise((resolve, reject) => {\n\n        let absolutePathReg = /^\\//;\n        // windows系统绝对路径并不是以/开头\n        // if (!absolutePathReg.test(csdPath) || !absolutePathReg.test(tdxFile)) {\n        //     let msg = '必须提供csd数据存储路径和通达信自定义数据文件路径.';\n        //     console.log(msg);\n        //     return reject(new Error(msg));\n        // }\n\n        let stocks = jo(path.resolve(csdPath, './stocks.json')).json;\n\n        // 创建文件用于临时保存自定义数据, 之后读取内容写入通达信目录\n        let tempFile = path.resolve(csdPath, tdxFile.split(/[/\\\\]/).pop());\n        fs.writeFileSync(tempFile, '');\n\n        if (typeof props === 'string') {\n            props = [props];\n        }\n\n        props.forEach((prop, index) => {\n            createPropFile(prop, index + 1, csdPath, tempFile, stocks);\n        });\n\n        // 只生成特定字段数据, 用于手动更新特定字段自定义数据, 譬如只更新云财经概念\n        if (props.length === 1) return resolve(path.resolve(csdPath, `${ props[0] }.txt`));\n\n        if (cb) {\n            cb(tempFile, csdPath, stocks);\n        }\n\n        // 一次性更新所有自定义数据\n        fs.createReadStream(tempFile)\n            .pipe(iconv.decodeStream('utf8'))\n            .pipe(iconv.encodeStream('GBK'))\n            .pipe(fs.createWriteStream(tdxFile));\n\n        console.log(`****数据写入 ${ tdxFile }, 通达信自定义数据更新完成****`);\n\n        resolve(tempFile);\n\n    });\n\n}\n\n\nexport default _tdx\n\n// tdx用于包装_tdx, 接收对象参数\nexport function tdx ({csdPath, tdxFile, props}) {\n    return _tdx(csdPath, tdxFile, props)\n}\n","/*!\n * Created by j on 18/9/14.\n */\nconst fs = require('fs');\nconst path = require('path');\n\n/**\n * 递归遍历目录\n * @param filePath\n * @param callback\n */\nfunction recurve(filePath, callback) {\n\n    fs.readdir(filePath, function (err, files) {\n        if (err) {\n            console.error(err);\n        } else {\n            //遍历读取到的文件列表\n            files.forEach(function (filename) {\n                //获取当前文件的绝对路径\n                var filedir = path.join(filePath, filename);\n                //根据文件路径获取文件信息，返回一个fs.Stats对象\n                fs.stat(filedir, function (eror, stats) {\n                    if (eror) {\n                        console.error('获取文件stats失败');\n                    } else {\n                        var isFile = stats.isFile();//是文件\n                        var isDir = stats.isDirectory();//是文件夹\n                        if (isFile) {\n                            callback(filedir);\n                        }\n                        if (isDir) {\n                            recurve(filedir, callback);//递归，如果是文件夹，就继续遍历该文件夹下面的文件\n                        }\n                    }\n                })\n            });\n        }\n    });\n\n}\n\nmodule.exports = function (filePath, callback) {\n\n    let stat = fs.statSync(filePath);\n\n    if (stat.isFile()) {\n\n        callback(filePath);\n\n    } else if (stat.isDirectory()) {\n\n        recurve(filePath, callback);\n\n    }\n\n};","module.exports = require(\"chardet\");","module.exports = require(\"cheerio\");","module.exports = require(\"cheerio-httpcli\");","module.exports = require(\"commander\");","module.exports = require(\"fs\");","module.exports = require(\"iconv-lite\");","module.exports = require(\"path\");","module.exports = require(\"superagent\");"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;;;AAIA;AAEA;AAEA;AAQA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;ACvCA;AAAA;AAAA;AAAA;AAAA;;;AAIA;AAEA;AAEA;AAEA;AAKA;AACA;AAGA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;;;;;;;;;;;AC7CA;AAAA;AAAA;AAAA;AAAA;;;AAIA;AAEA;AAEA;AAEA;AAMA;AACA;AACA;AACA;AAEA;AAEA;AAEA;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAAA;AAAA;;;AAIA;AAEA;AAEA;AAEA;AAKA;AACA;AACA;AAEA;AACA;AAEA;;;;;;;;;;;;ACtBA;AAAA;AAAA;;;AAIA;AAEA;AAEA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;;;;;;;;;;;AC3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;ACpCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAIA;AACA;AAEA;;;;;;;;;AAQA;AAEA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;AC7GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAIA;AAEA;AACA;AACA;AACA;AAEA;AAEA;;;;;;AAKA;AACA;AACA;AACA;AAAA;AACA;AAGA;;;;;;;AAKA;AAEA;AAEA;AAIA;AAEA;AAEA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AChEA;;;;AAKA;AACA;AACA;AACA;;;AAEA;;;;;AAKA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;;;;AAKA;AAGA;AACA;AACA;;;;;;;;;;;;AClEA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAIA;AAEA;AAEA;;;;;;AAKA;AACA;AACA;AACA;AACA;AAEA;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;;;;;;;;;;;AC7EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AACA;AACA;AADA;AAIA;;;;;;;;AAOA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5DA;;;AAIA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAGA;;;;;;;;AAOA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AACA;AASA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AAEA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AACA;AADA;AAMA;AAAA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;;;;;;;;;;;AASA;AAAA;AAAA;AAAA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAGA;AACA;AACA;AAKA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;AChJA;AAAA;AAAA;AAAA;;;;AAKA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AAIA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;;;;;;;;;;;;AC/CA;AAAA;AAAA;;;;AAKA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAIA;AAEA;AACA;AApBA;;;;;;;;;;;;ACTA;AAAA;AAAA;;;;AAKA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAMA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AA9BA;;;;;;;;;;;;ACTA;AAAA;AAAA;;;;AAKA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AApBA;;;;;;;;;;;;ACTA;AAAA;;;;;AAKA;;;AAIA;AACA;AACA;AACA;AACA;AACA;AADA;;;;;;;;;;;;ACbA;AAAA;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AApBA;;;;;;;;;;;;ACNA;AAAA;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AAEA;AApBA;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAKA;AACA;AACA;AAEA;AAEA;;;;;;;;;AAQA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAdA;AACA;AAeA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;;;;;;;;;AAOA;AAAA;AAAA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;AC1HA;;;AAGA;AACA;AAAA;AAEA;;;;;;;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;;;;;;;;;;;ACxDA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}